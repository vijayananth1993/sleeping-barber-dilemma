// Code generated by MockGen. DO NOT EDIT.
// Source: barber.go

// Package mock_barber_shop is a generated GoMock package.
package mock_barber_shop

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBarber is a mock of Barber interface.
type MockBarber struct {
	ctrl     *gomock.Controller
	recorder *MockBarberMockRecorder
}

// MockBarberMockRecorder is the mock recorder for MockBarber.
type MockBarberMockRecorder struct {
	mock *MockBarber
}

// NewMockBarber creates a new mock instance.
func NewMockBarber(ctrl *gomock.Controller) *MockBarber {
	mock := &MockBarber{ctrl: ctrl}
	mock.recorder = &MockBarberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBarber) EXPECT() *MockBarberMockRecorder {
	return m.recorder
}

// Work mocks base method.
func (m *MockBarber) Work() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Work")
}

// Work indicates an expected call of Work.
func (mr *MockBarberMockRecorder) Work() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Work", reflect.TypeOf((*MockBarber)(nil).Work))
}
